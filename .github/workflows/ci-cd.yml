name: CI-CD
on:
  push:
    branches: [main, dev]
  pull_request:
    branches: [main, dev]
    types: [ opened, synchronize, reopened ]

permissions:
  contents: read

jobs:
  gradle-build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 1

      - uses: actions/setup-java@v5
        with:
          java-version: '22'
          distribution: temurin

      - uses: gradle/actions/setup-gradle@v5

      - name: Cache Gradle
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-${{ runner.os }}-

      - run: ./gradlew assemble --info
  quality-checks:
    name: Quality Checks
    runs-on: ubuntu-latest
    needs: [ gradle-build ]
    strategy:
      matrix:
        task: [ lint, code-analysis, test ]
      fail-fast: false

    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 1
      - uses: actions/setup-java@v5
        with:
          java-version: '22'
          distribution: temurin
          cache: 'gradle'

      - name: Run Lint
        if: matrix.task == 'lint'
        continue-on-error: true
        run: |
          ./gradlew lint | tee lint-report.txt

      - name: Run Code Analysis
        if: matrix.task == 'code-analysis'
        continue-on-error: true
        run: |
          ./gradlew detekt

      - name: Move and Rename Detekt Report
        if: matrix.task == 'code-analysis'
        run: |
          cp build/reports/detekt/detekt.md code-analysis-report.txt

      - name: Run Test
        if: matrix.task == 'test'
        continue-on-error: true
        run: |
          ./gradlew test | tee test-report.txt

      - name: Upload Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.task }}-report
          path: ${{ matrix.task }}-report.txt
          retention-days: 30
  release:
    if: ${{ github.ref == 'refs/heads/main' }}
    needs: [ gradle-build, quality-checks ]
    runs-on: ubuntu-latest
    permissions:
      contents: write
      issues: write
      pull-requests: write

    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - uses: actions/setup-node@v5
        with:
          node-version-file: package.json
          cache: npm
          cache-dependency-path: package-lock.json

      - name: Install Node.js dependencies
        run: npm ci

      - name: Run Semantic Release
        run: npx semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  upload-docs:
    if: ${{ github.ref == 'refs/heads/main' }}
    needs: [ release ]
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pages: write
      id-token: write

    steps:
      - uses: actions/checkout@v5

      - uses: actions/setup-java@v5
        with:
          java-version: '22'
          distribution: temurin
          cache: 'gradle'

      - name: Build Dokka HTML docs
        run: ./gradlew dokkaHtml

      - name: Deploy to GitHub Pages
        uses: crazy-max/ghaction-github-pages@v4
        with:
          target_branch: gh-pages
          build_dir: doc/
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  docker:
    name: Build & Push Docker
    if: ${{ github.ref == 'refs/heads/main' }}
    needs: [ gradle-build, upload-docs ]
    runs-on: ubuntu-latest
    permissions:
      packages: write

    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 1

      - uses: docker/setup-buildx-action@v3

      - name: Convert repository name to lowercase
        id: repo_name
        run: echo "lowercase=$(echo "${{ github.repository }}" | tr '[:upper:]' '[:lower:]')" >> $GITHUB_OUTPUT

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ steps.repo_name.outputs.lowercase }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build & Push Docker Image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          platforms: linux/amd64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          provenance: false

      - name: Verify Docker Image
        run: docker pull ghcr.io/${{ steps.repo_name.outputs.lowercase }}:latest
